version: '3.5'
services:
  postgres:
    image: postgres:latest
    volumes:
      - ./private/var/lib/postgresql:/var/lib/postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test_app_db
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'

  mongo:
    image: mongo:latest
    volumes:
      - ./private/mongodb_data_container:/var/lib/postgresql
    healthcheck:
      test: ["CMD","mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - "27017:27017"
  api:
    build:
      context: ./
      dockerfile: ./deploy/Dockerfile
    environment:
      - POSTGRES_DB_HOST=postgres
      - POSTGRES_DB_USERNAME=postgres
      - POSTGRES_DB_PASSWORD=postgres
      - POSTGRES_DB_NAME=test_app_db
      - POSTGRES_DB_PORT=5432
      - MONGO_HOST=mongo
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=rootpassword
      - MONGO_PORT:27017
      - APP_PORT:3000
    ports:
      - "3000:3000"
    depends_on:
      mongo:
        condition: service_healthy
      postgres:
        condition: service_healthy
